// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iotTempService.proto

/*
Package iottempservice is a generated protocol buffer package.

It is generated from these files:
	iotTempService.proto

It has these top-level messages:
	Thermostat
	Zone
	Room
	ByIdReqest
	ThermostatArray
	GetTemperatureResponse
*/
package iot_temp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Thermostat_DeviceType int32

const (
	Thermostat_OTHER        Thermostat_DeviceType = 0
	Thermostat_ARDUINO      Thermostat_DeviceType = 1
	Thermostat_RASPBERRY_PI Thermostat_DeviceType = 2
)

var Thermostat_DeviceType_name = map[int32]string{
	0: "OTHER",
	1: "ARDUINO",
	2: "RASPBERRY_PI",
}
var Thermostat_DeviceType_value = map[string]int32{
	"OTHER":        0,
	"ARDUINO":      1,
	"RASPBERRY_PI": 2,
}

func (x Thermostat_DeviceType) String() string {
	return proto.EnumName(Thermostat_DeviceType_name, int32(x))
}
func (Thermostat_DeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Thermostat struct {
	Id        uint64                     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address   string                     `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Port      int32                      `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Type      Thermostat_DeviceType      `protobuf:"varint,5,opt,name=type,enum=com.avegao.iot.temp.service.Thermostat_DeviceType" json:"type,omitempty"`
	Zone      *Zone                      `protobuf:"bytes,6,opt,name=zone" json:"zone,omitempty"`
	Room      *Room                      `protobuf:"bytes,7,opt,name=room" json:"room,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	DeletedAt *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
}

func (m *Thermostat) Reset()                    { *m = Thermostat{} }
func (m *Thermostat) String() string            { return proto.CompactTextString(m) }
func (*Thermostat) ProtoMessage()               {}
func (*Thermostat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Thermostat) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Thermostat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Thermostat) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Thermostat) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Thermostat) GetType() Thermostat_DeviceType {
	if m != nil {
		return m.Type
	}
	return Thermostat_OTHER
}

func (m *Thermostat) GetZone() *Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Thermostat) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *Thermostat) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Thermostat) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Thermostat) GetDeletedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type Zone struct {
	Id        uint64                     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	DeletedAt *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
}

func (m *Zone) Reset()                    { *m = Zone{} }
func (m *Zone) String() string            { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()               {}
func (*Zone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Zone) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Zone) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Zone) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Zone) GetDeletedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type Room struct {
	Id        uint64                     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Zone      *Zone                      `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	DeletedAt *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Room) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetZone() *Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Room) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Room) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Room) GetDeletedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type ByIdReqest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ByIdReqest) Reset()                    { *m = ByIdReqest{} }
func (m *ByIdReqest) String() string            { return proto.CompactTextString(m) }
func (*ByIdReqest) ProtoMessage()               {}
func (*ByIdReqest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ByIdReqest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ThermostatArray struct {
	Thermostats []*Thermostat `protobuf:"bytes,1,rep,name=thermostats" json:"thermostats,omitempty"`
}

func (m *ThermostatArray) Reset()                    { *m = ThermostatArray{} }
func (m *ThermostatArray) String() string            { return proto.CompactTextString(m) }
func (*ThermostatArray) ProtoMessage()               {}
func (*ThermostatArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ThermostatArray) GetThermostats() []*Thermostat {
	if m != nil {
		return m.Thermostats
	}
	return nil
}

type GetTemperatureResponse struct {
	Temperature float32 `protobuf:"fixed32,1,opt,name=temperature" json:"temperature,omitempty"`
}

func (m *GetTemperatureResponse) Reset()                    { *m = GetTemperatureResponse{} }
func (m *GetTemperatureResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTemperatureResponse) ProtoMessage()               {}
func (*GetTemperatureResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetTemperatureResponse) GetTemperature() float32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func init() {
	proto.RegisterType((*Thermostat)(nil), "com.avegao.iot.temp.service.Thermostat")
	proto.RegisterType((*Zone)(nil), "com.avegao.iot.temp.service.Zone")
	proto.RegisterType((*Room)(nil), "com.avegao.iot.temp.service.Room")
	proto.RegisterType((*ByIdReqest)(nil), "com.avegao.iot.temp.service.ByIdReqest")
	proto.RegisterType((*ThermostatArray)(nil), "com.avegao.iot.temp.service.ThermostatArray")
	proto.RegisterType((*GetTemperatureResponse)(nil), "com.avegao.iot.temp.service.GetTemperatureResponse")
	proto.RegisterEnum("com.avegao.iot.temp.service.Thermostat_DeviceType", Thermostat_DeviceType_name, Thermostat_DeviceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ThermostatService service

type ThermostatServiceClient interface {
	FindAll(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ThermostatArray, error)
	FindOneById(ctx context.Context, in *ByIdReqest, opts ...grpc.CallOption) (*Thermostat, error)
	GetTemperatureById(ctx context.Context, in *ByIdReqest, opts ...grpc.CallOption) (*GetTemperatureResponse, error)
}

type thermostatServiceClient struct {
	cc *grpc.ClientConn
}

func NewThermostatServiceClient(cc *grpc.ClientConn) ThermostatServiceClient {
	return &thermostatServiceClient{cc}
}

func (c *thermostatServiceClient) FindAll(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ThermostatArray, error) {
	out := new(ThermostatArray)
	err := grpc.Invoke(ctx, "/com.avegao.iot.temp.service.ThermostatService/FindAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thermostatServiceClient) FindOneById(ctx context.Context, in *ByIdReqest, opts ...grpc.CallOption) (*Thermostat, error) {
	out := new(Thermostat)
	err := grpc.Invoke(ctx, "/com.avegao.iot.temp.service.ThermostatService/FindOneById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thermostatServiceClient) GetTemperatureById(ctx context.Context, in *ByIdReqest, opts ...grpc.CallOption) (*GetTemperatureResponse, error) {
	out := new(GetTemperatureResponse)
	err := grpc.Invoke(ctx, "/com.avegao.iot.temp.service.ThermostatService/GetTemperatureById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ThermostatService service

type ThermostatServiceServer interface {
	FindAll(context.Context, *google_protobuf1.Empty) (*ThermostatArray, error)
	FindOneById(context.Context, *ByIdReqest) (*Thermostat, error)
	GetTemperatureById(context.Context, *ByIdReqest) (*GetTemperatureResponse, error)
}

func RegisterThermostatServiceServer(s *grpc.Server, srv ThermostatServiceServer) {
	s.RegisterService(&_ThermostatService_serviceDesc, srv)
}

func _ThermostatService_FindAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThermostatServiceServer).FindAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.avegao.iot.temp.service.ThermostatService/FindAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThermostatServiceServer).FindAll(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThermostatService_FindOneById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByIdReqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThermostatServiceServer).FindOneById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.avegao.iot.temp.service.ThermostatService/FindOneById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThermostatServiceServer).FindOneById(ctx, req.(*ByIdReqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThermostatService_GetTemperatureById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByIdReqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThermostatServiceServer).GetTemperatureById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.avegao.iot.temp.service.ThermostatService/GetTemperatureById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThermostatServiceServer).GetTemperatureById(ctx, req.(*ByIdReqest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThermostatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.avegao.iot.temp.service.ThermostatService",
	HandlerType: (*ThermostatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAll",
			Handler:    _ThermostatService_FindAll_Handler,
		},
		{
			MethodName: "FindOneById",
			Handler:    _ThermostatService_FindOneById_Handler,
		},
		{
			MethodName: "GetTemperatureById",
			Handler:    _ThermostatService_GetTemperatureById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iotTempService.proto",
}

func init() { proto.RegisterFile("iotTempService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0x87, 0x9b, 0x34, 0x5d, 0xe9, 0x09, 0x1a, 0xc5, 0x42, 0x53, 0xd4, 0x21, 0x11, 0x72, 0x43,
	0x2e, 0x58, 0x22, 0x75, 0x02, 0x09, 0xb8, 0x40, 0x99, 0xb6, 0x41, 0x6f, 0xe8, 0xf0, 0xca, 0x05,
	0x13, 0xd2, 0x94, 0x36, 0x87, 0x2e, 0x52, 0x13, 0x07, 0xc7, 0x9d, 0x54, 0x1e, 0x83, 0x17, 0xe2,
	0x41, 0x78, 0x16, 0x24, 0x64, 0x27, 0x25, 0x2b, 0x43, 0x5d, 0xda, 0xbb, 0xf4, 0xf8, 0xf7, 0xb9,
	0x3e, 0x9f, 0xff, 0xc0, 0xa3, 0x98, 0x89, 0x11, 0x26, 0xd9, 0x39, 0xf2, 0xeb, 0x78, 0x82, 0x5e,
	0xc6, 0x99, 0x60, 0x64, 0x7f, 0xc2, 0x12, 0x2f, 0xbc, 0xc6, 0x69, 0xc8, 0xbc, 0x98, 0x09, 0x4f,
	0x60, 0x92, 0x79, 0x79, 0x11, 0xe9, 0x3d, 0x99, 0x32, 0x36, 0x9d, 0xa1, 0xaf, 0xa2, 0xe3, 0xf9,
	0x57, 0x5f, 0xc4, 0x09, 0xe6, 0x22, 0x4c, 0xb2, 0x82, 0xee, 0xed, 0xff, 0x1b, 0xc0, 0x24, 0x13,
	0x8b, 0x62, 0xd0, 0xf9, 0xdd, 0x04, 0x18, 0x5d, 0x21, 0x4f, 0x58, 0x2e, 0x42, 0x41, 0x76, 0x41,
	0x8f, 0x23, 0x4b, 0xb3, 0x35, 0xd7, 0xa0, 0x7a, 0x1c, 0x11, 0x02, 0x46, 0x1a, 0x26, 0x68, 0xe9,
	0xb6, 0xe6, 0x76, 0xa8, 0xfa, 0x26, 0x16, 0xb4, 0xc3, 0x28, 0xe2, 0x98, 0xe7, 0x56, 0x53, 0x95,
	0x97, 0x3f, 0x65, 0x3a, 0x63, 0x5c, 0x58, 0x86, 0xad, 0xb9, 0x2d, 0xaa, 0xbe, 0xc9, 0x29, 0x18,
	0x62, 0x91, 0xa1, 0xd5, 0xb2, 0x35, 0x77, 0xb7, 0xdf, 0xf7, 0xd6, 0xb4, 0xe2, 0x55, 0x0b, 0xf1,
	0x8e, 0x51, 0x56, 0x46, 0x8b, 0x0c, 0xa9, 0xe2, 0xc9, 0x0b, 0x30, 0xbe, 0xb3, 0x14, 0xad, 0x1d,
	0x5b, 0x73, 0xcd, 0xfe, 0xd3, 0xb5, 0xf3, 0x5c, 0xb0, 0x14, 0xa9, 0x8a, 0x4b, 0x8c, 0x33, 0x96,
	0x58, 0xed, 0x1a, 0x18, 0x65, 0x2c, 0xa1, 0x2a, 0x4e, 0x5e, 0x01, 0x4c, 0x38, 0x86, 0x02, 0xa3,
	0xcb, 0x50, 0x58, 0xf7, 0x14, 0xdc, 0xf3, 0x0a, 0x91, 0xde, 0x52, 0xa4, 0x37, 0x5a, 0x9a, 0xa6,
	0x9d, 0x32, 0x1d, 0x08, 0x89, 0xce, 0xb3, 0x68, 0x89, 0x76, 0xee, 0x46, 0xcb, 0x74, 0x81, 0x46,
	0x38, 0xc3, 0x12, 0x85, 0xbb, 0xd1, 0x32, 0x1d, 0x08, 0xe7, 0x25, 0x40, 0xa5, 0x8c, 0x74, 0xa0,
	0x35, 0x1c, 0xbd, 0x3f, 0xa1, 0xdd, 0x06, 0x31, 0xa1, 0x1d, 0xd0, 0xe3, 0x4f, 0x83, 0x0f, 0xc3,
	0xae, 0x46, 0xba, 0x70, 0x9f, 0x06, 0xe7, 0x67, 0x47, 0x27, 0x94, 0x7e, 0xbe, 0x3c, 0x1b, 0x74,
	0x75, 0xe7, 0x97, 0x06, 0x86, 0xd4, 0x55, 0x6b, 0xe7, 0x57, 0xad, 0x34, 0xb7, 0xb7, 0x62, 0x6c,
	0x6f, 0xa5, 0xb5, 0x89, 0x95, 0x1f, 0x3a, 0x18, 0x72, 0x57, 0x6b, 0x75, 0xb7, 0x3c, 0x61, 0xcd,
	0xcd, 0x4e, 0xd8, 0xaa, 0x14, 0x63, 0x7b, 0x29, 0xad, 0xed, 0xa5, 0xec, 0x6c, 0x22, 0xe5, 0x31,
	0xc0, 0xd1, 0x62, 0x10, 0x51, 0xfc, 0x86, 0xf9, 0xad, 0x1b, 0xef, 0x7c, 0x81, 0x07, 0xd5, 0x35,
	0x0c, 0x38, 0x0f, 0x17, 0x64, 0x00, 0xa6, 0xf8, 0x5b, 0xca, 0x2d, 0xcd, 0x6e, 0xba, 0x66, 0xff,
	0x59, 0xcd, 0x9b, 0x4c, 0x6f, 0xb2, 0xce, 0x6b, 0xd8, 0x7b, 0x87, 0xea, 0x85, 0x43, 0x1e, 0x8a,
	0x39, 0x47, 0x8a, 0x79, 0xc6, 0xd2, 0x1c, 0x89, 0x0d, 0xa6, 0xa8, 0xca, 0x6a, 0x41, 0x3a, 0xbd,
	0x59, 0xea, 0xff, 0xd4, 0xe1, 0x61, 0x35, 0x6f, 0xf9, 0x42, 0x92, 0x8f, 0xd0, 0x3e, 0x8d, 0xd3,
	0x28, 0x98, 0xcd, 0xc8, 0xde, 0xad, 0xfe, 0x4f, 0xe4, 0x4b, 0xd7, 0x7b, 0x5e, 0x73, 0xa9, 0xaa,
	0x5b, 0xa7, 0x41, 0x42, 0x30, 0xe5, 0x94, 0xc3, 0x14, 0xa5, 0x27, 0xb2, 0xbe, 0xd3, 0x4a, 0x65,
	0xaf, 0xae, 0x12, 0xa7, 0x41, 0x04, 0x90, 0x55, 0x0f, 0x9b, 0xfd, 0xd3, 0xe1, 0xda, 0xe0, 0xff,
	0x0d, 0x3b, 0x8d, 0xa3, 0xe0, 0xe2, 0xed, 0x34, 0x16, 0x57, 0xf3, 0xb1, 0xc4, 0xfd, 0x02, 0xf7,
	0x63, 0x26, 0x0e, 0x24, 0x7e, 0x50, 0xe2, 0x3e, 0xc7, 0x9c, 0xcd, 0xf9, 0x04, 0xfd, 0x29, 0xcf,
	0x26, 0x6f, 0x62, 0x26, 0xe4, 0x68, 0x39, 0x38, 0xde, 0x51, 0x6e, 0x0f, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x70, 0xe5, 0x58, 0x80, 0xa9, 0x06, 0x00, 0x00,
}
